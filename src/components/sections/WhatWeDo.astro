---
// src/components/sections/WhatWeDo.astro
import apartmentIcon from "@/assets/apartment.svg";
import fillIcon from "@/assets/fill.svg";
import homeIcon from "@/assets/home.svg";
import { getWhatWeDoContent } from "@/lib/tina";

// Load content from Tina CMS
const content = getWhatWeDoContent();

const sectionTitle = content?.title || "What We Do";
const residential = content?.residential;
const commercial = content?.commercial;
---

<section
  class="bg-black text-white py-20 sm:py-24 relative overflow-hidden"
>
  <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <h2
      class="text-4xl sm:text-5xl md:text-8xl font-nunito text-center mb-12 sm:mb-16"
    >
      {sectionTitle}
    </h2>
    <div
      class="flex flex-col md:flex-row justify-center items-stretch gap-12 md:gap-8 lg:gap-16"
    >
      <!-- Residential Card -->
      <div
        class="service-card relative text-black 2xl:text-white 2xl:hover:text-black p-8 shadow-2xl w-full md:w-2/5 overflow-hidden"
      >
        <!-- SVG animado de fondo -->
        <div class="service-bg absolute inset-0 pointer-events-none">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 453.07 540.9"
            preserveAspectRatio="none"
            class="w-full h-full"
            aria-hidden="true"
          >
            <g>
              <polyline
                class="service-bg-path"
                points="401.04 60.93 37.07 78.35 434.94 161.96 45.84 171.58 429.73 272.56 19.87 278.1 434.94 407.25 13.77 395.14 380.08 480.02 52.94 459.94"
              ></polyline>
            </g>
          </svg>
        </div>

        <!-- Contenido que se revela -->
        <div class="service-content relative z-10">
          <div class="flex justify-center mb-6">
            <img
              src={homeIcon.src}
              alt="Residential icon"
              class="w-16 h-16 sm:w-20 sm:h-20"
            />
          </div>
          <h3 class="text-3xl font-bold uppercase text-center mb-4">
            {residential?.title}
          </h3>
          <p class="text-base sm:text-lg mb-6">
            {residential?.description}
          </p>
          <div
            class="text-center text-lg sm:text-xl font-bold uppercase flex flex-wrap justify-center items-center gap-x-2"
          >
            {residential?.features?.map((feature, index) => (
              <>
                <span>{feature}</span>
                {index < (residential?.features?.length || 0) - 1 && (
                  <img
                    src={fillIcon.src}
                    alt=""
                    class="w-5 h-5 inline-block"
                    aria-hidden="true"
                  />
                )}
              </>
            ))}
          </div>
        </div>
      </div>

      <!-- Commercial Card -->
      <div
        class="service-card relative text-black 2xl:text-white 2xl:hover:text-black p-8 w-full md:w-2/5 overflow-hidden"
      >
        <!-- SVG animado de fondo -->
        <div class="service-bg absolute inset-0 pointer-events-none">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 453.07 540.9"
            preserveAspectRatio="none"
            class="w-full h-full"
            aria-hidden="true"
          >
            <g>
              <polyline
                class="service-bg-path"
                points="401.04 60.93 37.07 78.35 434.94 161.96 45.84 171.58 429.73 272.56 19.87 278.1 434.94 407.25 13.77 395.14 380.08 480.02 52.94 459.94"
              ></polyline>
            </g>
          </svg>
        </div>

        <!-- Contenido que se revela -->
        <div class="service-content relative z-10">
          <div class="flex justify-center mb-6">
            <img
              src={apartmentIcon.src}
              alt="Commercial icon"
              class="w-16 h-16 sm:w-20 sm:h-20"
            />
          </div>
          <h3 class="text-3xl font-bold uppercase text-center mb-4">
            {commercial?.title}
          </h3>
          <div class="relative">
            <p class="text-base sm:text-lg mb-4">
              {commercial?.description}
            </p>
            {commercial?.additionalDescription && (
              <div class="">
                <p class="text-base sm:text-lg">
                  {commercial?.additionalDescription}
                </p>
              </div>
            )}
          </div>
          <div
            class="text-center text-lg sm:text-xl font-bold uppercase flex flex-wrap justify-center items-center gap-x-2 mt-6"
          >
            {commercial?.features?.map((feature, index) => (
              <>
                <span>{feature}</span>
                {index < (commercial?.features?.length || 0) - 1 && (
                  <img
                    src={fillIcon.src}
                    alt=""
                    class="w-5 h-5 inline-block"
                    aria-hidden="true"
                  />
                )}
              </>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Animación del SVG de fondo */
  .service-bg {
    /* opacity: 0.15; */
    z-index: 0;
  }

  .service-bg-path {
    fill: none;
    stroke: #ffffff;
    stroke-width: 122px;
    stroke-linejoin: bevel;
    stroke-dasharray: 4000;
    stroke-dashoffset: 4000;
    transition: stroke-dashoffset 2s ease-out;
  }

  /* Activar animación en hover */
  .service-card:hover .service-bg-path {
    stroke-dashoffset: 0;
  }

  /* Animación para dibujar las líneas */
  @keyframes drawServicePath {
    from {
      stroke-dashoffset: 4000;
    }
    to {
      stroke-dashoffset: 0;
    }
  }

  /* Efecto de revelación del contenido */
  .service-content {
    /* opacity: 0.3; */
    transform: translateY(10px);
    transition:
      opacity 2s ease-out,
      transform 2s ease-out;
  }

  /* Revelar contenido en hover */
  .service-card:hover .service-content {
    opacity: 1;
    transform: translateY(0);
  }

  @keyframes revealContent {
    0% {
      opacity: 0;
      transform: translateY(10px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* En dispositivos móviles (sin hover), mostrar la animación completa */
  @media (hover: none) or (max-width: 768px) {
    .service-bg-path {
      stroke-dashoffset: 0;
      transition: none;
    }

    .service-content {
      opacity: 1;
      transform: translateY(0);
      transition: none;
    }
  }

  /* Reducir el movimiento para usuarios que lo prefieren */
  @media (prefers-reduced-motion: reduce) {
    .service-bg-path,
    .service-content {
      transition: none;
    }

    .service-card:hover .service-bg-path {
      stroke-dashoffset: 0;
    }

    .service-card:hover .service-content {
      opacity: 1;
      transform: none;
    }
  }
</style>
