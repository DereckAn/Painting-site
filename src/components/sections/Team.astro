---
/**
 * Team Section Component
 * Displays team members in a carousel with autoplay
 */

import { getTeamContent } from "@/lib/tina";

// Load content from Tina CMS
const content = getTeamContent();

const label = content?.label || "Our Team";
const title = content?.title || "Highly Qualified";
const titleHighlight = content?.titleHighlight || "Professionals";
const description = content?.description || "Meet the experts who will transform your space with dedication and mastery";
const teamMembers = content?.members || [];
---

<section id="team" class="py-24 px-6 bg-background">
  <div class="max-w-7xl mx-auto">
    <div class="text-center mb-16">
      <div class="inline-block">
        <span class="text-sm font-medium tracking-wider text-muted-foreground uppercase">
          {label}
        </span>
        <div class="h-px bg-primary w-16 mt-2 mx-auto"></div>
      </div>

      <h2 class="text-5xl sm:text-6xl md:text-7xl lg:text-8xl mb-6 sm:mb-8 font-bold tracking-tight text-start">
        {title}
        <span class="block">{titleHighlight}</span>
      </h2>

      <p class="text-muted-foreground mt-6 max-w-2xl text-start">
        {description}
      </p>
    </div>

    <div class="relative max-w-5xl mx-auto">
      <!-- Carousel Container -->
      <div class="overflow-hidden" id="team-carousel">
        <div class="flex">
          {teamMembers.map((member) => (
            <div class="flex-[0_0_100%] md:flex-[0_0_50%] lg:flex-[0_0_33.333%] min-w-0 p-4">
              <div class="group relative overflow-hidden rounded-sm bg-card">
                <div class="aspect-[3/4] overflow-hidden">
                  <img
                    src={member.image}
                    alt={member.name}
                    class="w-full h-full object-cover grayscale group-hover:grayscale-0 group-hover:scale-105 transition-all duration-500"
                    loading="lazy"
                  />
                </div>

                <div class="p-6 space-y-2">
                  <h3 class="text-xl font-display font-semibold">
                    {member.name}
                  </h3>
                  <p class="text-sm font-medium text-primary uppercase tracking-wider">
                    {member.role}
                  </p>
                  <p class="text-sm text-muted-foreground leading-relaxed">
                    {member.description}
                  </p>
                </div>

                <div class="absolute inset-0 border border-border opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Navigation Buttons -->
      <button
        id="team-prev"
        class="hidden md:flex absolute -left-12 top-1/2 -translate-y-1/2 w-10 h-10 items-center justify-center rounded-full border-2 border-border bg-background hover:bg-muted transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
        aria-label="Previous slide"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="m15 18-6-6 6-6"></path>
        </svg>
      </button>

      <button
        id="team-next"
        class="hidden md:flex absolute -right-12 top-1/2 -translate-y-1/2 w-10 h-10 items-center justify-center rounded-full border-2 border-border bg-background hover:bg-muted transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
        aria-label="Next slide"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="m9 18 6-6-6-6"></path>
        </svg>
      </button>
    </div>
  </div>
</section>

<script>
  import EmblaCarousel from 'embla-carousel';
  import Autoplay from 'embla-carousel-autoplay';

  const emblaNode = document.getElementById('team-carousel');
  const prevButton = document.getElementById('team-prev');
  const nextButton = document.getElementById('team-next');

  if (emblaNode && prevButton && nextButton) {
    const emblaApi = EmblaCarousel(emblaNode, {
      align: 'start',
      loop: true,
      skipSnaps: false,
    }, [
      Autoplay({
        delay: 4000,
        stopOnInteraction: false,
        stopOnMouseEnter: true,
      })
    ]);

    // Navigation button handlers
    prevButton.addEventListener('click', () => {
      emblaApi.scrollPrev();
    });

    nextButton.addEventListener('click', () => {
      emblaApi.scrollNext();
    });

    // Update button states
    const updateButtons = () => {
      if (emblaApi.canScrollPrev()) {
        prevButton.removeAttribute('disabled');
      } else {
        prevButton.setAttribute('disabled', 'true');
      }

      if (emblaApi.canScrollNext()) {
        nextButton.removeAttribute('disabled');
      } else {
        nextButton.setAttribute('disabled', 'true');
      }
    };

    emblaApi.on('select', updateButtons);
    emblaApi.on('init', updateButtons);
  }
</script>
